@model InternetShop.WebUI.Models.GoodEditViewModel

@using (Ajax.BeginForm("EditGood", "Admin", new AjaxOptions() { UpdateTargetId = "goodModalDialog" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title mx-auto" id="exampleModalLabel">Good edit</h5>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <hr />
        <div class="modal-body">
            <form class="justify-content-center">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Good.GoodId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Good.GoodName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Good.GoodName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Good.GoodName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Good.Manufacturer, "Manufacturer", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Good.ManufacturerId, new SelectList(Model.Manufacturers, nameof(Model.Good.Manufacturer.ManufacturerId), nameof(Model.Good.Manufacturer.ManufacturerName), Model.Good.ManufacturerId), htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Good.Category, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Good.CategoryId, new SelectList(Model.Categories, nameof(Model.Good.Category.CategoryId), nameof(Model.Good.Category.CategoryName), Model.Good.CategoryId), htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Good.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Good.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Good.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Good.GoodCount, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Good.GoodCount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Good.GoodCount, "", new { @class = "text-danger" })
                    </div>
                </div>
            </form>
        </div>
        <div class="modal-footer justify-content-center">
            <div class="form-actions no-color">
                <input type="submit" value="Save" class="btn btn-primary m-1" />
                <button type="button" class="btn btn-secondary m-1" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
}
